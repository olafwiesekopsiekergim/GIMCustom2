#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
Report 60020 "CCO Phys. Invt. Recording"
{
    Caption = 'Phys. Invt. Recording';
    WordLayout = './Layouts/CCOPhys.Invt.Recording.docx';
    DefaultLayout = Word;

    dataset
    {
        dataitem("Phys. Invt. Record Header"; "Phys. Invt. Record Header")
        {
            DataItemTableView = sorting("Order No.", "Recording No.");
            RequestFilterFields = "Order No.", "Recording No.";
            column(ReportForNavId_9745; 9745) { } // Autogenerated by ForNav - Do not delete
            column(ReportForNav_PhysInvtRecordingHeader; ReportForNavWriteDataItem('PhysInvtRecordingHeader', "Phys. Invt. Record Header")) { }
            column(Phys__Invt__Recording_Header_Order_No_; "Phys. Invt. Record Header"."Order No.")
            {
                IncludeCaption = false;
            }
            column(Phys__Invt__Recording_Header_Recording_No_; "Phys. Invt. Record Header"."Recording No.")
            {
                IncludeCaption = false;
            }
            dataitem(PageCounter; Integer)
            {
                DataItemTableView = sorting(Number) where(Number = const(1));
                column(ReportForNavId_8098; 8098) { } // Autogenerated by ForNav - Do not delete
                column(ReportForNav_PageCounter; ReportForNavWriteDataItem('PageCounter', PageCounter)) { }
                column("USERID"; UserId)
                {
                    IncludeCaption = false;
                }
                column(COMPANYNAME; COMPANYNAME)
                {
                    IncludeCaption = false;
                }
                column(CurrReport_PAGENO; Format(ReportForNav.PagePlaceHolder))
                {
                    IncludeCaption = false;
                }
                column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header___Order_No__; "Phys. Invt. Record Header"."Order No.")
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header__Status; "Phys. Invt. Record Header".Status)
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header___Person_Responsible_; "Phys. Invt. Record Header"."Person Responsible")
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header___Recording_No__; "Phys. Invt. Record Header"."Recording No.")
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header__Description; "Phys. Invt. Record Header".Description)
                {
                    IncludeCaption = false;
                }
                column(EmptyString; '')
                {
                    IncludeCaption = false;
                }
                column(EmptyString_Control30; '')
                {
                    IncludeCaption = false;
                }
                column(EmptyString_Control33; '')
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header__FIELDCAPTION__Person_Recorded__; "Phys. Invt. Record Header".FieldCaption("Person Recorded"))
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header__FIELDCAPTION__Date_Recorded__; "Phys. Invt. Record Header".FieldCaption("Date Recorded"))
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header__FIELDCAPTION__Time_Recorded__; "Phys. Invt. Record Header".FieldCaption("Time Recorded"))
                {
                    IncludeCaption = false;
                }
                column(PageCounter_Number; PageCounter.Number)
                {
                    IncludeCaption = false;
                }
                column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
                {
                    IncludeCaption = false;
                }
                column(Phys__Inventory_RecordingCaption; Phys__Inventory_RecordingCaptionLbl)
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header___Order_No__Caption; "Phys. Invt. Record Header".FieldCaption("Order No."))
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header__StatusCaption; "Phys. Invt. Record Header".FieldCaption(Status))
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header___Person_Responsible_Caption; "Phys. Invt. Record Header".FieldCaption("Person Responsible"))
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header___Recording_No__Caption; "Phys. Invt. Record Header".FieldCaption("Recording No."))
                {
                    IncludeCaption = false;
                }
                column(Phys__Invt__Recording_Header__DescriptionCaption; "Phys. Invt. Record Header".FieldCaption(Description))
                {
                    IncludeCaption = false;
                }
                dataitem("Phys. Invt. Record Line"; "Phys. Invt. Record Line")
                {
                    DataItemLink = "Order No." = FIELD("Order No."), "Recording No." = FIELD("Recording No.");
                    DataItemLinkReference = "Phys. Invt. Record Header";
                    DataItemTableView = sorting("Order No.", "Recording No.", "Line No.");
                    column(ReportForNavId_9445; 9445) { } // Autogenerated by ForNav - Do not delete
                    column(ReportForNav_PhysInvtRecordingLine; ReportForNavWriteDataItem('PhysInvtRecordingLine', "Phys. Invt. Record Line")) { }
                    column(Phys__Invt__Recording_Line__FIELDCAPTION_Quantity_; FieldCaption(Quantity))
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line__Item_No__; "Phys. Invt. Record Line"."Item No.")
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line__Location_Code_; "Phys. Invt. Record Line"."Location Code")
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line__Bin_Code_; "Phys. Invt. Record Line"."Bin Code")
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line_Description; "Phys. Invt. Record Line".Description)
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line__Unit_of_Measure_Code_; "Phys. Invt. Record Line"."Unit of Measure Code")
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line__Variant_Code_; "Phys. Invt. Record Line"."Variant Code")
                    {
                        IncludeCaption = false;
                    }
                    column(EmptyString_Control20; '')
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line_Order_No_; "Phys. Invt. Record Line"."Order No.")
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line_Recording_No_; "Phys. Invt. Record Line"."Recording No.")
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line_Line_No_; "Phys. Invt. Record Line"."Line No.")
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line__Item_No__Caption; FieldCaption("Item No."))
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line__Location_Code_Caption; FieldCaption("Location Code"))
                    {
                    }
                    column(Phys__Invt__Recording_Line__Bin_Code_Caption; FieldCaption("Shelf No."))
                    {
                    }
                    column(Phys__Invt__Recording_Line_DescriptionCaption; FieldCaption(Description))
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line__Unit_of_Measure_Code_Caption; FieldCaption("Unit of Measure Code"))
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Recording_Line__Variant_Code_Caption; FieldCaption("Variant Code"))
                    {
                        IncludeCaption = false;
                    }
                    column(Phys__Invt__Line__Shelf_No; "Phys. Invt. Record Line"."Shelf No.")
                    {
                    }
                    column(Phys__Invt__Line__Qty; "Phys. Invt. Record Line".Quantity)
                    {
                    }
                    trigger OnPreDataItem();
                    begin
                        ReportForNav.OnPreDataItem('PhysInvtRecordingLine', "Phys. Invt. Record Line");
                    end;
                }
                trigger OnPreDataItem();
                begin
                    ReportForNav.OnPreDataItem('PageCounter', PageCounter);
                end;
            }
            trigger OnPreDataItem();
            begin
                ReportForNav.OnPreDataItem('PhysInvtRecordingHeader', "Phys. Invt. Record Header");
            end;
        }
    }
    requestpage
    {
        SaveValues = true;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field("Mit Zählmenge"; MengeAnzeigen)
                    {
                        ApplicationArea = Basic;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    var
        CurrReport_PAGENOCaptionLbl: label 'Page';
        Phys__Inventory_RecordingCaptionLbl: label 'Phys. Inventory Recording';
        MengeAnzeigen: Boolean;

    local procedure OnPreSectionPhysInvtRecordingLine_Body4(var "Phys. Invt. Record Line": Record "Phys. Invt. Record Line");
    begin
        with "Phys. Invt. Record Line" do begin
            ReportForNavSetShowOutput(MengeAnzeigen = false);
        end;// Autogenerated by ForNav;
    end;

    local procedure OnPreSectionPhysInvtRecordingLine_Body1(var "Phys. Invt. Record Line": Record "Phys. Invt. Record Line");
    begin
        with "Phys. Invt. Record Line" do begin
            ReportForNavSetShowOutput(MengeAnzeigen = true);
        end;// Autogenerated by ForNav;
    end;
    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        ReportForNav: Codeunit "ForNAV Report Management";
        ReportForNavTotalsCausedBy: Integer;
        ReportForNavInitialized: Boolean;
        ReportForNavShowOutput: Boolean;

    local procedure ReportsForNavInit()
    var
        id: Integer;
    begin
        Evaluate(id, CopyStr(CurrReport.ObjectId(false), StrPos(CurrReport.ObjectId(false), ' ') + 1));
        ReportForNav.OnInit(id);
    end;

    local procedure ReportsForNavPre()
    begin
    end;

    local procedure ReportForNavSetTotalsCausedBy(value: Integer)
    begin
        ReportForNavTotalsCausedBy := value;
    end;

    local procedure ReportForNavSetShowOutput(value: Boolean)
    begin
        ReportForNavShowOutput := value;
    end;

    local procedure ReportForNavInit(jsonObject: JsonObject)
    begin
        ReportForNav.Init(jsonObject, CurrReport.ObjectId);
    end;

    local procedure ReportForNavWriteDataItem(dataItemId: Text; rec: Variant): Text
    var
        values: Text;
        jsonObject: JsonObject;
        currLanguage: Integer;
    begin
        if not ReportForNavInitialized then begin
            ReportForNavInit(jsonObject);
            ReportForNavInitialized := true;
        end;

        case (dataItemId) of
            'PhysInvtRecordingLine':
                begin
                    ReportForNavShowOutput := true;
                    OnPreSectionPhysInvtRecordingLine_Body4("Phys. Invt. Record Line");
                    jsonObject.Add('$Body4$Pre', ReportForNavShowOutput);
                    ReportForNavShowOutput := true;
                    OnPreSectionPhysInvtRecordingLine_Body1("Phys. Invt. Record Line");
                    jsonObject.Add('$Body1$Pre', ReportForNavShowOutput);
                end;
        end;
        ReportForNav.AddDataItemValues(jsonObject, dataItemId, rec);
        jsonObject.WriteTo(values);
        exit(values);
    end;
    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
