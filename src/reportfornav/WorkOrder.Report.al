#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
Report 60014 "CCO Work Order"
{
	Caption = 'Work Order';
	WordLayout = './Layouts/CCOWorkOrder.docx'; DefaultLayout = Word;

	dataset
	{
		dataitem("Sales Header";"Sales Header")
		{
			DataItemTableView = sorting("Document Type", "No.") where("Document Type" = const(Order));
			RequestFilterFields = "No.", "Sell-to Customer No.";
			RequestFilterHeading = 'Sales Order';
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(ReportForNav_SalesHeader; ReportForNavWriteDataItem('SalesHeader',"Sales Header")) {}
			dataitem(PageLoop;Integer)
			{
				DataItemTableView = sorting(Number) where(Number = const(1));
				column(ReportForNavId_2; 2) {} // Autogenerated by ForNav - Do not delete
				column(ReportForNav_PageLoop; ReportForNavWriteDataItem('PageLoop',PageLoop)) {}
				column(CompanyInfoPicture; CompanyInfo.Picture)
				{
					IncludeCaption = false;
				}
				column(CompanyInfoPicture2; CompanyInfo."Picture 2")
				{
					IncludeCaption = false;
				}
				column(OrderDate_SalesHeader; "Sales Header"."Order Date")
				{
					IncludeCaption = false;
				}
				column(ExternalDocumentNo_SalesHeader; "Sales Header"."External Document No.")
				{
					IncludeCaption = false;
				}
				column(YourReference_SalesHeader; "Sales Header"."Your Reference")
				{
					IncludeCaption = false;
				}
				column(fix_TerminLieferung_SalesHeader; "Sales Header"."fix-Termin Lieferung")
				{
					IncludeCaption = false;
				}
				column(No_SalesHeader; "Sales Header"."No.")
				{
					IncludeCaption = false;
				}
				column(TODAY_0_4; Format(Today, 0, 4))
				{
					IncludeCaption = false;
				}
				column(COMPANYNAME; COMPANYNAME)
				{
					IncludeCaption = false;
				}
				column(Ship_toCountry_RegionCode_SalesHeader; "Sales Header"."Ship-to Country/Region Code")
				{
					IncludeCaption = false;
				}
				column(Ship_toName_SalesHeader; "Sales Header"."Ship-to Name")
				{
					IncludeCaption = false;
				}
				column(Ship_toPostCode_SalesHeader; "Sales Header"."Ship-to Post Code")
				{
					IncludeCaption = false;
				}
				column(Ship_toCity_SalesHeader; "Sales Header"."Ship-to City")
				{
					IncludeCaption = false;
				}
				column(Ship_toContact_SalesHeader; "Sales Header"."Ship-to Contact")
				{
					IncludeCaption = false;
				}
				column(Ship_toAddress2_SalesHeader; "Sales Header"."Ship-to Address 2")
				{
					IncludeCaption = false;
				}
				column(Ship_toAddress_SalesHeader; "Sales Header"."Ship-to Address")
				{
					IncludeCaption = false;
				}
				column(Ship_toName2_SalesHeader; "Sales Header"."Ship-to Name 2")
				{
					IncludeCaption = false;
				}
				column(CustAddr8; CustAddr[8])
				{
					IncludeCaption = false;
				}
				column(CustAddr7; CustAddr[7])
				{
					IncludeCaption = false;
				}
				column(CustAddr6; CustAddr[6])
				{
					IncludeCaption = false;
				}
				column(CustAddr5; CustAddr[5])
				{
					IncludeCaption = false;
				}
				column(CustAddr4; CustAddr[4])
				{
					IncludeCaption = false;
				}
				column(CustAddr3; CustAddr[3])
				{
					IncludeCaption = false;
				}
				column(CustAddr2; CustAddr[2])
				{
					IncludeCaption = false;
				}
				column(CustAddr1; CustAddr[1])
				{
					IncludeCaption = false;
				}
				dataitem("Sales Line";"Sales Line")
				{
					DataItemLink = "Document Type" = FIELD("Document Type"), "Document No." = FIELD("No.");
					DataItemLinkReference = "Sales Header";
					DataItemTableView = sorting("Document Type", "Document No.", "Line No.");
					column(ReportForNavId_58; 58) {} // Autogenerated by ForNav - Do not delete
					column(ReportForNav_SalesLine; ReportForNavWriteDataItem('SalesLine',"Sales Line")) {}
					column(SalesLineFIELDCAPTION_Description2; "Sales Line".FieldCaption("Description 2"))
					{
						IncludeCaption = false;
					}
					column(SalesLineFIELDCAPTION_Type; "Sales Line".FieldCaption(Type))
					{
						IncludeCaption = false;
					}
					column(SalesLineFIELDCAPTION_UnitofMeasure; "Sales Line".FieldCaption("Unit of Measure"))
					{
						IncludeCaption = false;
					}
					column(SalesLineFIELDCAPTION_Quantity; "Sales Line".FieldCaption(Quantity))
					{
						IncludeCaption = false;
					}
					column(SalesLineFIELDCAPTION_Description; "Sales Line".FieldCaption(Description))
					{
						IncludeCaption = false;
					}
					column(SalesLineFIELDCAPTION_No; "Sales Line".FieldCaption("No."))
					{
						IncludeCaption = false;
					}
					column(Description2_SalesLine; "Sales Line"."Description 2")
					{
						IncludeCaption = false;
					}
					column(UnitofMeasure_SalesLine; "Sales Line"."Unit of Measure")
					{
						IncludeCaption = false;
					}
					column(Quantity_SalesLine; "Sales Line".Quantity)
					{
						IncludeCaption = false;
					}
					column(Description_SalesLine; "Sales Line".Description)
					{
						IncludeCaption = false;
					}
					column(No_SalesLine; "Sales Line"."No.")
					{
						IncludeCaption = false;
					}
					column(Type_SalesLine; "Sales Line".Type)
					{
						IncludeCaption = false;
					}
					trigger OnPreDataItem();
					begin
						ReportForNav.OnPreDataItem('SalesLine',"Sales Line");
					end;
				}
				dataitem("Sales Comment Line";"Sales Comment Line")
				{
					DataItemLink = "Document Type" = FIELD("Document Type"), "No." = FIELD("No.");
					DataItemLinkReference = "Sales Header";
					DataItemTableView = where("Document Line No." = const(0));
					column(ReportForNavId_71; 71) {} // Autogenerated by ForNav - Do not delete
					column(ReportForNav_SalesCommentLine; ReportForNavWriteDataItem('SalesCommentLine',"Sales Comment Line")) {}
					column(SalesCommentLineFIELDCAPTION_Comment; "Sales Comment Line".FieldCaption(Comment))
					{
						IncludeCaption = false;
					}
					column(SalesCommentLineFIELDCAPTION_Code; "Sales Comment Line".FieldCaption(Code))
					{
						IncludeCaption = false;
					}
					column(SalesCommentLineFIELDCAPTION_Date; "Sales Comment Line".FieldCaption(Date))
					{
						IncludeCaption = false;
					}
					column(Comment_SalesCommentLine; "Sales Comment Line".Comment)
					{
						IncludeCaption = false;
					}
					column(Code_SalesCommentLine; "Sales Comment Line".Code)
					{
						IncludeCaption = false;
					}
					column(Date_SalesCommentLine; "Sales Comment Line".Date)
					{
						IncludeCaption = false;
					}
					trigger OnPreDataItem();
					begin
						ReportForNav.OnPreDataItem('SalesCommentLine',"Sales Comment Line");
					end;
				}
				dataitem("Extra Lines";Integer)
				{
					DataItemTableView = sorting(Number) where(Number = const(1));
					column(ReportForNavId_78; 78) {} // Autogenerated by ForNav - Do not delete
					column(ReportForNav_ExtraLines; ReportForNavWriteDataItem('ExtraLines',"Extra Lines")) {}
					trigger OnPreDataItem();
					begin
						ReportForNav.OnPreDataItem('ExtraLines',"Extra Lines");
					end;
				}
				trigger OnPreDataItem();
				begin
					ReportForNav.OnPreDataItem('PageLoop',PageLoop);
				end;
			}
			trigger OnPreDataItem();
			begin
				ReportForNav.OnPreDataItem('SalesHeader',"Sales Header");
			end;
			trigger OnAfterGetRecord();
			begin
				FormatAddr.SalesHeaderBillTo(CustAddr, "Sales Header");
			end;
			
			trigger OnPostDataItem();
			begin
				//c/wa/230212:
				if not CurrReport.Preview then begin
					//SalesPrintedWorkOrder("Sales Header");
					"Sales Header"."No. Printed Work Order" += 1;
					"Sales Header".Modify(false);
			
				end;
			
			end;
			
		}
	}
	requestpage
	{
		SaveValues = false;
		layout
		{
			area(Content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(PrintToExcel; PrintToExcel)
					{
						ApplicationArea = Basic;
						Caption = 'Print to Excel';
					}
				}
			}
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin

	end;

	trigger OnPreReport()
	begin

		//DUE : - begin
		CompanyInfo.Get;
		CompanyInfo.CalcFields("Picture 2", Picture);

		MailTxt := CompanyInfo."E-Mail";
		if MailTxt <> '' then
			EMailTxt := DUE002;
		WebTxt := CompanyInfo."Home Page";
		if WebTxt <> '' then
			wwwTxt := DUE003;
		FonTxt := CompanyInfo."Phone No.";
		faxTxt := CompanyInfo."Fax No.";
		//DUE : - ende
		;ReportsForNavPre;
	end;
	var
		Text000: label 'Work Order';
		Text001: label 'Sales Order No.';
		Text002: label 'Quantity used during work (Posted with the Sales Order)';
		Text003: label 'Quantity Used';
		Text004: label 'Comments';
		Text005: label 'Extra Item/Resource used during work (Posted with Item or Resource Journals)';
		ExcelBuf: Record "Excel Buffer" temporary;
		FormatAddr: Codeunit "Format Address";
		CustAddr: array[8] of Text[50];
		PrintToExcel: Boolean;
		Text006: label 'Date';
		"---DUE...": Integer;
		CompanyInfo: Record "Company Information";
		Monteur: Record "Salesperson/Purchaser";
		FirmenAnschr2: Text[120];
		MailTxt: Text[30];
		WebTxt: Text[30];
		FonTxt: Text[30];
		faxTxt: Text[30];
		"WÃ¤hrTxt": Text[10];
		EMailTxt: Text[30];
		wwwTxt: Text[30];
		DUE002: label 'E-mail:';
		DUE003: label 'Web:';

	local procedure MakeWOHeader()
	begin
	end;

	local procedure MakeWOLineHeader()
	var
		HeaderLineNo: Integer;
	begin
	end;

	local procedure MakeWOLine()
	begin
	end;

	local procedure MakeWOCommentLineHeader()
	begin
	end;

	local procedure MakeWOCommentLine()
	begin
	end;

	local procedure MakeWOExtraLineHeader()
	begin
	end;

	local procedure OnPreSectionPageLoop_Header2(var PageLoop : Record Integer);
	begin
		with PageLoop do begin
		end;
	end;
	local procedure OnPreSectionSalesLine_Header6(var "Sales Line" : Record "Sales Line");
	begin
		with "Sales Line" do begin
		end;
	end;
	local procedure OnPreSectionSalesLine_Body7(var "Sales Line" : Record "Sales Line");
	begin
		with "Sales Line" do begin
		end;
	end;
	local procedure OnPreSectionSalesLine_TransFooter8(var "Sales Line" : Record "Sales Line");
	begin
		with "Sales Line" do begin
		end;
	end;
	local procedure OnPreSectionSalesCommentLine_Header9(var "Sales Comment Line" : Record "Sales Comment Line");
	begin
		with "Sales Comment Line" do begin
		end;
	end;
	local procedure OnPreSectionSalesCommentLine_Body10(var "Sales Comment Line" : Record "Sales Comment Line");
	begin
		with "Sales Comment Line" do begin
		end;
	end;
	local procedure OnPreSectionSalesCommentLine_TransFooter11(var "Sales Comment Line" : Record "Sales Comment Line");
	begin
		with "Sales Comment Line" do begin
		end;
	end;
	local procedure OnPreSectionExtraLines_Header12(var "Extra Lines" : Record Integer);
	begin
		with "Extra Lines" do begin
			if "Sales Line".IsEmpty then
				ReportForNavSetShowOutput(false);
		end;
	end;
	local procedure OnPreSectionExtraLines_TransFooter13(var "Extra Lines" : Record Integer);
	begin
		with "Extra Lines" do begin
		end;
	end;
	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var
		ReportForNav: Codeunit "ForNAV Report Management";
		ReportForNavTotalsCausedBy: Integer;
		ReportForNavInitialized: Boolean;
		ReportForNavShowOutput: Boolean;

	local procedure ReportsForNavInit() var id: Integer; begin Evaluate(id, CopyStr(CurrReport.ObjectId(false), StrPos(CurrReport.ObjectId(false), ' ') + 1)); ReportForNav.OnInit(id); end;
	local procedure ReportsForNavPre() begin end;
	local procedure ReportForNavSetTotalsCausedBy(value : Integer) begin ReportForNavTotalsCausedBy := value; end;
	local procedure ReportForNavSetShowOutput(value : Boolean) begin ReportForNavShowOutput := value; end;
	local procedure ReportForNavInit(jsonObject : JsonObject) begin ReportForNav.Init(jsonObject, CurrReport.ObjectId); end;
	local procedure ReportForNavWriteDataItem(dataItemId: Text; rec : Variant) : Text
	var
		values: Text;
		jsonObject: JsonObject;
		currLanguage: Integer;
	begin
		if not ReportForNavInitialized then begin
			ReportForNavInit(jsonObject);
			ReportForNavInitialized := true;
		end;

		case (dataItemId) of
			'PageLoop':
				begin
						ReportForNavShowOutput := true; OnPreSectionPageLoop_Header2(PageLoop); jsonObject.Add('$Header2$Pre',ReportForNavShowOutput);
				end;
			'SalesLine':
				begin
					ReportForNavShowOutput := true; OnPreSectionSalesLine_Body7("Sales Line"); jsonObject.Add('$Body7$Pre',ReportForNavShowOutput);
						ReportForNavShowOutput := true; OnPreSectionSalesLine_Header6("Sales Line"); jsonObject.Add('$Header6$Pre',ReportForNavShowOutput);
						ReportForNavShowOutput := true; OnPreSectionSalesLine_TransFooter8("Sales Line"); jsonObject.Add('$TransFooter8$Pre',ReportForNavShowOutput);
				end;
			'SalesCommentLine':
				begin
					currLanguage := GlobalLanguage; GlobalLanguage := 1033; jsonObject.Add('DataItem$SalesCommentLine$CurrentKey$Text',"Sales Comment Line".CurrentKey); GlobalLanguage := currLanguage;
					ReportForNavShowOutput := true; OnPreSectionSalesCommentLine_Body10("Sales Comment Line"); jsonObject.Add('$Body10$Pre',ReportForNavShowOutput);
						ReportForNavShowOutput := true; OnPreSectionSalesCommentLine_Header9("Sales Comment Line"); jsonObject.Add('$Header9$Pre',ReportForNavShowOutput);
						ReportForNavShowOutput := true; OnPreSectionSalesCommentLine_TransFooter11("Sales Comment Line"); jsonObject.Add('$TransFooter11$Pre',ReportForNavShowOutput);
				end;
			'ExtraLines':
				begin
						ReportForNavShowOutput := true; OnPreSectionExtraLines_Header12("Extra Lines"); jsonObject.Add('$Header12$Pre',ReportForNavShowOutput);
						ReportForNavShowOutput := true; OnPreSectionExtraLines_TransFooter13("Extra Lines"); jsonObject.Add('$TransFooter13$Pre',ReportForNavShowOutput);
				end;
		end;
		ReportForNav.AddDataItemValues(jsonObject,dataItemId,rec);
		jsonObject.WriteTo(values);
		exit(values);
	end;
	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
